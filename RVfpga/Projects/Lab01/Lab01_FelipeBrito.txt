/* Felipe Brito - 2021007366 */


/* ----------------- Projeto 01 - Display Switches -----------------*/

#define GPIO_SWs    0x80001400
#define GPIO_LEDs   0x80001404
#define GPIO_INOUT  0x80001408

#define READ_GPIO(dir) (*(volatile unsigned *)dir)
#define WRITE_GPIO(dir, value) { (*(volatile unsigned *)dir) = (value); }

int main ( void )
{
  int En_Value=0xFFFF, switches_value;

  WRITE_GPIO(GPIO_INOUT, En_Value);

  while (1) { 
    switches_value = READ_GPIO(GPIO_SWs);   // read value on switches
    switches_value = switches_value >> 16;  // shift into lower 16 bits
    WRITE_GPIO(GPIO_LEDs, switches_value);  // display switch value on LEDs
  }

  return(0);
}






/* ----------------- Exercicio 01 - Flash Switches To Led -----------------*/

#define GPIO_SWs    0x80001400
#define GPIO_LEDs   0x80001404
#define GPIO_INOUT  0x80001408

#define DELAY 0x500000               /* Define o DELAY */

#define READ_GPIO(dir) (*(volatile unsigned *)dir)
#define WRITE_GPIO(dir, value) { (*(volatile unsigned *)dir) = (value); }

int main ( void )
{
  int En_Value=0xFFFF, switches_value, i, cnt;

  WRITE_GPIO(GPIO_INOUT, En_Value);

  while (1) { 
    switches_value = READ_GPIO(GPIO_SWs);
    switches_value = switches_value >> 16;  
    WRITE_GPIO(GPIO_LEDs, switches_value);
	
    // delay
    cnt = DELAY;
    i = 0;
    while (i < cnt)
        i++;
    
      WRITE_GPIO(GPIO_LEDs, 0);               // turn off LEDs 

    // delay
    i = 0;
    while (i < cnt)
        i++;
  }

  return(0);
}



/* ----------------- Exercicio 02 - Display Inverse -----------------*/


#define GPIO_SWs    0x80001400
#define GPIO_LEDs   0x80001404
#define GPIO_INOUT  0x80001408

#define READ_GPIO(dir) (*(volatile unsigned *)dir)
#define WRITE_GPIO(dir, value) { (*(volatile unsigned *)dir) = (value); }

int main ( void )
{
  int En_Value=0xFFFF, switches_value;

  WRITE_GPIO(GPIO_INOUT, En_Value);

  while (1) { 
    switches_value = READ_GPIO(GPIO_SWs);   // Lê os switches
    switches_value = switches_value >> 16;  // shift
	switches_value = switches_value ^ 0xFFFF;
    WRITE_GPIO(GPIO_LEDs, switches_value);  // Display valor invertido
  }

  return(0);
}


/* ----------------- Exercicio 03 - Scroll Leds -----------------*/


#define GPIO_SWs    0x80001400
#define GPIO_LEDs   0x80001404
#define GPIO_INOUT  0x80001408

#define DELAY 0x300000               /* Define the DELAY */

#define READ_GPIO(dir) (*(volatile unsigned *)dir)
#define WRITE_GPIO(dir, value) { (*(volatile unsigned *)dir) = (value); }

int main ( void )
{
  unsigned En_Value=0xFFFF;
  unsigned val, i, cnt;

  WRITE_GPIO(GPIO_INOUT, En_Value);

  val = 1;
  while (1) {
      // scroll bit(s) left	  
	  do {
      WRITE_GPIO(GPIO_LEDs, val);  // display
      // delay
	    cnt = DELAY;
	    i = 0;
	    while (i < cnt)
        i++;
	    val = val << 1;	  
	  } while (val < 65536); 

      // scroll bit(s) right	  
 	  do {
      WRITE_GPIO(GPIO_LEDs, val);  // display 
  	  // delay
	    cnt = DELAY;
	    i = 0;
	    while (i < cnt)
        i++;
	    val = val >> 1;	  
	} while ( (val & 1) == 0 );      // shift até direita

    // Add another bit or reset to val = 1 if all LEDs lit. 
    if (val == 65535)    // 2^16 - 1 = 65535 (value when all bits lit)
	    val = 1;
    else
      val = (val << 1) | 1;                 // add another bit to scroll
  }

  return(0);
}



/* ----------------- Exercicio 04 - 4Bit Add -----------------*/


#define GPIO_SWs    0x80001400
#define GPIO_LEDs   0x80001404
#define GPIO_INOUT  0x80001408

#define DELAY 0x500000               /* Define o DELAY */

#define READ_GPIO(dir) (*(volatile unsigned *)dir)
#define WRITE_GPIO(dir, value) { (*(volatile unsigned *)dir) = (value); }

int main ( void )
{
  unsigned int En_Value=0xFFFF, switches_value, num1, num2, result;

  WRITE_GPIO(GPIO_INOUT, En_Value);

  while (1) { 
    switches_value = READ_GPIO(GPIO_SWs);   // Lê switches
    switches_value = switches_value >> 16;  

    num1 = (switches_value & 0xF000) >> 12; // num1 = 4 msbs
    num2 = (switches_value & 0x000F);       // num2 = 4 lsbs
	
    result = num1 + num2;                   

    WRITE_GPIO(GPIO_LEDs, result);          // display suma nos LEDs
  }

  return(0);
}
